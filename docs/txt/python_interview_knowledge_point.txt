1.到底什么是Python？

Python是一种解释型语言。这就是说，与C语言和C的衍生语言不同，Python代码在运行之前不需要编译。其他解释型语言还包括PHP和Ruby

Python是动态类型语言，指的是你在声明变量时，不需要说明变量的类型。你可以直接编写类似x=111和x="I'm a string"这样的代码，程序不会报错

Python非常适合面向对象的编程（OOP），因为它支持通过组合（composition）与继承（inheritance）的方式定义类（class）

Python中没有访问说明符（access specifier，类似C++中的public和private），这么设计的依据是“大家都是成年人了”

在Python语言中，函数是第一类对象（first-class objects）。这指的是它们可以被指定给变量，函数既能返回函数类型，也可以接受函数作为输入。类（class）也是第一类对象

Python代码编写快，但是运行速度比编译语言通常要慢。好在Python允许加入基于C语言编写的扩展，因此我们能够优化代码，消除瓶颈，这点通常是可以实现的

Numpy就是一个很好地例子，它的运行速度真的非常快，因为很多算术运算其实并不是通过Python实现的

Python用途非常广泛——网络应用，自动化，科学建模，大数据应用，等等。它也常被用作“胶水语言”，帮助其他语言和组件改善运行状况

Python让困难的事情变得容易，因此程序员可以专注于算法和数据结构的设计，而不用处理底层的细节



2.什么是PEP8？

PEP8是一个编程规范，内容是一些关于如何让你的程序更具可读性的建议

其主要内容包括代码编排、文档编排、空格的使用、注释、文档描述、命名规范、编码建议等



3.什么是pickling和unpickling？

Pickle模块读入任何Python对象，将它们转换成字符串，然后使用dump函数将其转储到一个文件中——这个过程叫做pickling

反之从存储的字符串文件中提取原始Python对象的过程，叫做unpickling



4.Python是如何被解释的？

Python是一种解释性语言，它的源代码可以直接运行。Python解释器会将源代码转换成中间语言，之后再翻译成机器码再执行



5.Python是怎样管理内存的？

Python的内存管理是由私有heap空间管理的。所有的Python对象和数据结构都在一个私有heap中。程序员没有访问该heap的权限，只有解释器才能对它进行操作

为Python的heap空间分配内存是由Python的内存管理模块进行的，其核心API会提供一些访问该模块的方法供程序员使用

Python有自带的垃圾回收系统，它回收并释放没有被使用的内存，让它们能够被其他程序使用



6.哪些工具可以帮助debug或做静态分析

PyChecker是一个静态分析工具，它不仅能报告源代码中的错误，并且会报告错误类型和复杂度。Pylint是检验模块是否达到代码标准的另一个工具



7.什么是Python装饰器？

Python装饰器是Python中的特有变动，可以使修改函数变得更容易



8.数组和元组之间的区别是什么？

数组和元组之间的区别：数组内容是可以被修改的，而元组内容是只读的。另外，元组可以被哈希，比如作为字典的关键字



9.参数按值传递和引用传递是怎样实现的？

Python中的一切都是类，所有的变量都是一个对象的引用。引用的值是由函数确定的，因此无法被改变。但是如果一个对象是可以被修改的，你可以改动对象



10.字典推导式和列表推导式是什么？

它们是可以轻松创建字典和列表的语法结构



11.Python都有哪些自带的数据结构？

Python自带的数据结构分为可变的和不可变的。可变的有：数组、集合、字典；不可变的有：字符串、元组、数



12.什么是Python的命名空间？

在Python中，所有的名字都存在于一个空间中，它们在该空间中存在和被操作——这就是命名空间

它就好像一个盒子，每一个变量名字都对应装着一个对象。当查询变量的时候，会从该盒子里面寻找相应的对象



13.Python中的lambda是什么？

这是一个常被用于代码中的单个表达式的匿名函数



14.为什么lambda没有语句？

匿名函数lambda没有语句的原因，是它被用于在代码被执行的时候构建新的函数对象并且返回



15.Python中的pass是什么？

Pass是一个在Python中不会被执行的语句。在复杂语句中，如果一个地方需要暂时被留白，它常常被用于占位符



16.Python中什么是遍历器？

遍历器用于遍历一组元素，比如列表这样的容器



17.Python中的unittest是什么？

在Python中，unittest是Python中的单元测试框架。它拥有支持共享搭建、自动测试、在测试中暂停代码、将不同测试迭代成一组，等等的功能



18.在Python中什么是slicing？

Slicing是一种在有序的对象类型中（数组，元组，字符串）节选某一段的语法



19.在Python中什么是构造器？

生成器是实现迭代器的一种机制。它功能的实现依赖于yield表达式，除此之外它跟普通的函数没有两样



20.Python中的docstring是什么？

Python中文档字符串被称为docstring，它在Python中的作用是为函数、模块和类注释生成文档



21.如何在Python中拷贝一个对象？

如果要在Python中拷贝一个对象，大多时候你可以用copy.copy()或者copy.deepcopy()。但并不是所有的对象都可以被拷贝



22.Python中的负索引是什么？

Python中的序列索引可以是正也可以是负。如果是正索引，0是序列中的第一个索引，1是第二个索引。如果是负索引，（-1）是最后一个索引而（-2）是倒数第二个索引



23.如何将一个数字转换成一个字符串？

你可以使用自带函数str()将一个数字转换为字符串。如果你想要八进制或者十六进制数，可以用oct()或hex()



24.Xrange和range的区别是什么？

Xrange用于返回一个xrange对象，而range用于返回一个数组。不管那个范围多大，Xrange都使用同样的内存



25.Python中的模块和包是什么？

在Python中，模块是搭建程序的一种方式。每一个Python代码文件都是一个模块，并可以引用其他的模块，比如对象和属性

一个包含许多Python代码的文件夹是一个包。一个包可以包含模块和子文件夹



26.什么是Python自省？

自省就是面向对象的语言所写的程序在运行时，所能知道对象的类型。简单一句就是运行时能够获得对象的类型。比如type(),dir(),getattr(),hasattr(),isinstance()



27.*args，**kwargs参数是什么？

默认参数一定要用不可变对象，如果是可变对象，运行会有逻辑错误

*args 表示可变参数，在调用函数的时候，自动组装为tuple，可以传入任意个参数，包括0个参数

**kargs 表示关键字参数，在调用函数的时候，自动组装为dict，可以传入任意个关键字参数



28.如何让你的程序更具可读性？

模块划分合理，哪些功能划分为一个模块（子程序、函数、过程），要相对独立的功能

尽可能减少全局变量

模块之间尽量弱耦合，模块内高内聚，调用的参数要简洁清楚

程序书写要规范，命名规范，格式整齐，有适当的空行，注意缩进、空行

需要必要的合理的注释，越详尽越好，包括程序的入口、返回值等

一定要用常见的方法，尽量用短句，循环尽量保持在2层之内，开关语句要少

尽量多写方法调用，方便代码复用

使用有意义的命名方法，前缀来指明一个变量的数据类型



29.Python是如何被解释的？

当编写Python代码时，需要编写一个.py结尾的python文件，要运行代码，直接用Python解释器去执行.py文件

解释器只是在执行程序时，才一条条的解释成机器语言给计算机来执行，所以运行速度不如编译后的程序运行的快

编译型语言在程序执行之前，先会通过编译器对程序执行一个编译的过程，把程序转变成机器语言。运行时就不需要翻译，而直接执行就可以了。最典型的例子就是C语言

解释型语言就没有这个编译的过程，而是在程序运行的时候，通过解释器对程序逐行作出解释，然后直接运行，最典型的例子是Ruby

通过以上的例子，我们可以来总结一下解释型语言和编译型语言的优缺点，因为编译型语言在程序运行之前就已经对程序做出了“翻译”，所以在运行时就少掉了“翻译”的过程，所以效率比较高。但是我们也不能一概而论，一些解释型语言也可以通过解释器的优化来在对程序做出翻译时对整个程序做出优化，从而在效率上超过编译型语言

此外，随着Java等基于虚拟机的语言的兴起，我们又不能把语言纯粹地分成解释型和编译型这两种

用Java来举例，Java首先是通过编译器编译成字节码文件，然后在运行时通过解释器给解释成机器文件。所以我们说Java是一种先编译后解释的语言



30.简述Python的运行过程

在说这个问题之前，我们先来说两个概念，PyCodeObject和pyc文件

我们在硬盘上看到的pyc自然不必多说，而其实PyCodeObject则是Python编译器真正编译成的结果。我们先简单知道就可以了，继续向下看

当python程序运行时，编译的结果则是保存在位于内存中的PyCodeObject中，当Python程序运行结束时，Python解释器则将PyCodeObject写回到pyc文件中

当python程序第二次运行时，首先程序会在硬盘中寻找pyc文件，如果找到，则直接载入，否则就重复上面的过程

所以我们应该这样来定位PyCodeObject和pyc文件，我们说pyc文件其实是PyCodeObject的一种持久化保存方式



31.如何在Python中拷贝一个对象？

Python中的对象之间赋值时是按引用传递的，如果需要拷贝对象，需要使用标准库中的copy模块

copy.copy
        浅拷贝，只拷贝父对象，不会拷贝对象的内部的子对象

copy.deepcopy
        深拷贝，拷贝对象及其子对象

    赋值：简单地拷贝对象的引用，两个对象的id相同
    浅拷贝：创建一个新的组合对象，这个新对象与原对象共享内存中的子对象
    深拷贝：创建一个新的组合对象，同时递归地拷贝所有子对象，新的组合对象与原对象没有任何关联。虽然实际上会共享不可变的子对象，但不影响它们的相互独立性

    浅拷贝和深拷贝的不同仅仅是对组合对象来说，所谓的组合对象就是包含了其它对象的对象，如列表，类实例。而对于数字、字符串以及其它“原子”类型，没有拷贝一说，产生的都是原对象的引用



32.如何用Python删除一个文件？

os.remove
    # 删除文件，不经过回收站
os.rmdir
    # 删除空文件夹，经过回收站
shutil.rmtree
    # 删除文件夹以及文件夹的子文件和子文件夹，不经过回收站
send2trash.send2trash
    # 第三方模块，可以删除任何东西，删除的东西送回回收站



33.如何将一个数字转换成一个字符串？

方法1：内置方法str()

a = 123
b = str(a)
print(type(a))
print(type(b))


方法2：格式化字符串

st = 322
tem = '%d' %st
print(tem)
print(type(st))
print(type(tem))



34.Python是如何进行内存管理的？